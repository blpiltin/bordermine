<style>

</style>

<div class="row">
  <div class="col-auto">
    <h1 class="title-heading">{{#if title}}{{title}}{{else}}{{getTitle}}{{/if}}</h1>
  </div>
  {{#if fields._id}}
    <div class="col mt-2 text-right">
      <button type="button" class="btn btn-outline-secondary" id="btnView" onclick="location.href='{{user.userPath}}/course/{{course_id}}/{{fields.type}}/{{fields._id}}'" enctype="multipart/form-data">Live View</button>
    </div>
  {{/if}}
</div>
<form class="needs-validation" novalidate enctype="multipart/form-data" action="{{#if fields._id}}{{fields._id}}{{/if}}" method="post">
  <div class="form-group form-row">
    <div class="col">
      <label for="title">Title</label>
      <input id="title" class="form-control" type="text" name="title" placeholder="Enter a {{fields.type}} title" pattern="[^\d_-]\w+(\w|\d|-|\s)*[a-zA-Z0-9]+$" value="{{fields.title}}" required>
      <div class="invalid-feedback">Please enter a valid {{fields.type}} title. Valid names begin with letters and can only include letters, numbers, underscores, dashes and spaces.</div>
    </div>
  </div>
  <div class="form-group form-row">
    <div class="col">
      <label for="slug">Slug</label>
      <input id="slug" class="form-control" type="text" name="slug" placeholder="Enter a slug, or autogenerate" pattern="[^\d_-]\w+(\w|\d|-)*[a-zA-Z0-9]+$" value="{{fields.slug}}" required>
      <div class="invalid-feedback">Please enter a valid slug. Valid slugs begin with letters and can only include letters, numbers, underscores, and dashes.</div>
    </div>
  </div>
  <div class="form-group form-row">
    <div class="col">
      <label for="description">Description</label>
      <textarea id="description" class="form-control" name="description" placeholder="Enter a {{fields.type}} description" rows="5">{{fields.description}}</textarea>
    </div>
  </div>
  <div class="form-group form-row">
    <div class="col">
      <label for="summary">Home Page Summary</label>
      <textarea id="summary" class="form-control" name="summary" placeholder="Enter a summary for this {{fields.type}}'s listing on the home page" rows="3">{{fields.summary}}</textarea>
    </div>
  </div>
  <div class="form-group form-row">
    <div class="col">
      <label for="notes">Notes</label>
      <textarea id="notes" class="form-control" name="notes" placeholder="Enter any notes to help with the lesson here. These can be private or displayed after a reveal time (see below)." rows="5">{{fields.notes}}</textarea>
    </div>
  </div>
  <button type="submit" class="btn btn-primary" id="btnSubmit">Save</button>
  <button class="btn btn-primary cm-hidden" id="spinner" type="button" disabled>
    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
    Saving...
  </button>
  <button type="button" class="btn btn-secondary" id="btnCancel" onclick="location.href='{{back}}'">Cancel</button>
</form>

<script>

(function() { 

  //======================================================
  // Slug generation
  //======================================================

  let protocol = window.location.protocol;
  let hostname = window.location.hostname;
  let path = window.location.pathname;
  let domain = path.match(/[^\/]+\.[^\/]+/)[0];
  let user = path.match(/[^\/]+\.[^\/]+(?:\/edit)?\/([^\/]+)/)[1];

  //------------------------------------------------------
  // Generate a valid slug based on the course name
  //------------------------------------------------------
  const generateSlug = function() { 
    let name = $('#title').val();
    let slug = name.toLowerCase().replace(/\s/g, '-');
    $('#slug').val(slug);
  }
  
  //------------------------------------------------------
  // Generate the url based on the slug
  //------------------------------------------------------
  const generateUrl = function() {
    let slug = $('#slug').val();
    let url =  protocol + '//' + hostname + '/' + domain + '/' + user + '/' + slug;
    $('#activityUrl').text(url);
  }

  $('#title').keyup(generateSlug);

  if (window.addEventListener) {
    window.addEventListener('load', generateUrl, false);
  } 
  else if (window.attachEvent) {
    window.attachEvent('onload', generateUrl);
  }

})();


$(document).ready(() => {

  //======================================================
  // CKEditor initialization
  //======================================================
  console.log(ClassicEditor.builtinPlugins.map( plugin => plugin.pluginName));

  ClassicEditor
    .create(document.querySelector('#description'))
    .then(editor => {
        console.log(editor);
    })
    .catch(error => {
        console.error(error);
    });

  ClassicEditor
    .create(document.querySelector('#notes'))
    .then(editor => {
        console.log(editor);
    })
    .catch(error => {
        console.error(error);
    });
});

</script>