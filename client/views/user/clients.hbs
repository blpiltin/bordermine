<style>

  .cm-edit-list-title-row {
    {{!-- margin-left: 0px;
    margin-right: 0px; --}}
  }

  .cm-edit-list-body {
    padding: 0px 0px;
  }

  .cm-edit-list-header-row {
    padding: 10px 0px 5px 0px;
    border-bottom: 1px solid #ccc;
    margin-bottom: 5px;
  }

  .cm-edit-list-header-row .cm-edit-list-field {
    {{!-- padding: 0px; --}}
    font-weight: bolder;
    font-size: larger;
  }

  .cm-edit-list-data-row {
    padding: 3px 0px;
    {{!-- margin-right: 0px; --}}
  }

  .cm-edit-list-field { 
    margin-top: 5px; 
    margin-bottom: 0px;
  }

  .cm-edit-list-footer-row, .cm-page-row {
    margin-top: 5px;
    border-top: 1px solid #ccc;
    padding: 10px 0px;
  }

  .cm-sort-icon.cm-sort-desc {
    margin-left: -5px;
  }

  .icon {
    display:inline;
    width: 25px;
    margin-bottom: 2px;
  }

  .cm-sort-remove .icon {
    width: 20px;
  }

  .cm-search-icon {
    margin-right: 5px;
    margin-left: 5px;
  }

  .cm-search {
    display: inline;
  }

  .cm-search input {
    display: inline;
    width: 250px;
  }

</style>

<div class="row cm-edit-list-title-row">
  <div class="col-auto">
    <h1 class="title-heading" style="display:inline;">{{#if title}}{{title}}{{else}}{{getTitle}}{{/if}}</h1>
    <div class="spinner-border cm-hidden" id="spinner" role="status" style="margin-left:10px;margin-bottom:2px;">
      <span class="sr-only"></span>
    </div>
  </div>
  <div class="col text-right" style="margin-top:12px;margin-right:0px;">
    <div class="cm-search">
      <a class="cm-search-icon" title="Click me to search" onclick="cmSearch()" href="javascript:void(0)">{{icon "search"}}</a>
      <input type="text" id="txtSearch" class="form-control" name="search" placeholder="Enter search text here" onkeypress="cmSearch(event)" value="{{filter.search}}">
    </div>
  </div>
</div>
<div class="container cm-edit-list-body">
  <div class="row cm-edit-list-header-row">
    <div class="col-4 cm-edit-list-field">
      <span class="cm-edit-list-field-text">Name</span>
      <span class="cm-edit-list-sort-icons">
        <a class="cm-sort-icon cm-sort-asc" id="lnkSortNameAsc" href="{{types}}?sort=name{{getParamsA filter 'page,search'}}">{{icon "arrow-down"}}</a>
        <a class="cm-sort-icon cm-sort-remove cm-hidden" id="lnkSortNameRemove" href="{{types}}{{getParamsQ filter 'page,search'}}">{{icon "no"}}</a>
        <a class="cm-sort-icon cm-sort-desc" id="lnkSortNameDesc" href="{{types}}?sort=name&dir=desc{{getParamsA filter 'page,search'}}">{{icon "arrow-up"}}</a>
      </span>
    </div>
    <div class="col-3 cm-edit-list-field">
      <span class="cm-edit-list-field-text">Contact</span>
    </div>
    <div class="col-5 cm-edit-list-field">
      <span class="cm-edit-list-field-text">Phone</span>
    </div>
  </div>
  {{#unless records}} 
    <div class="row cm-edit-list-data-row" id="rowEmpty">
      <div class="col-2">
      </div>
      <div class="col-7">
        <div class="cm-toggle-visible cm-edit-list-field cm-edit-list-no-data-msg">There are no {{types}} to display. Click <strong>Add New</strong> to create some.</div>
      </div>
      <div class="col-3 text-right">
      </div>
    </div>
  {{/unless}}
  {{#each records}}
    <form id="form{{this.id}}" class="needs-validation" novalidate action="{{type}}/{{this.id}}?redirect={{types}}{{getParamsA ../filter "page,sort,dir,search"}}" method="post">
      <div class="row cm-edit-list-data-row" id="row{{this.id}}">
          <div class="col-4">
            <div class="cm-toggle-visible cm-edit-list-field">{{this.name}}</div>
            <input id="name{{this.id}}" size="4" class="form-control cm-toggle-visible cm-hidden" type="text" name="name" placeholder="Enter a name" value="{{this.name}}">
          </div>
          <div class="col-3">
            <div class="cm-toggle-visible cm-edit-list-field">{{this.contactName}}</div>
            <input id="contactName{{this.id}}" class="form-control cm-toggle-visible cm-hidden" type="text" name="contactName" placeholder="Enter the {{type}} contactName" value="{{this.contactName}}" required>
            <div class="invalid-feedback">Please provide the text contact name for this {{type}}.</div>
          </div>
          <div class="col-3">
            <div class="cm-toggle-visible cm-edit-list-field">{{this.contactPhone}}</div>
            <input id="contactPhone{{this.id}}" class="form-control cm-toggle-visible cm-hidden" type="text" name="contactPhone" placeholder="Enter the {{type}} contactPhone" value="{{this.contactPhone}}" required>
            <div class="invalid-feedback">Please provide the text contact phone for this {{type}}.</div>
          </div>
          <div class="col-2 text-right">
            <div class="btn-group btn-group-sm cm-edit-details-btns" role="group" aria-label="Manifests and Edit/Details">
              <button type="button" class="btn btn-outline-secondary rounded-left btn-manifests" aria-pressed="false" id="btnManifests{{this.id}}" onclick="location.href='manifests?exporterId={{this.id}}'">Manifests</button>
              <button type="button" class="btn btn-outline-secondary rounded-right btn-edit" aria-pressed="false" id="btnEdit{{this.id}}" onclick="location.href='{{type}}/{{this.id}}'">Edit/Details</button>
            </div>
          </div>
      </div>
    </form>
  {{/each}}
  <div class="row cm-page-row">
    <div class="col-2">
      <div class="btn-group btn-group-sm" role="group" aria-label="Add New">
        <button type="button" class="btn btn-primary rounded-left cm-toggle-visible cm-toggle-enabled" id="btnAddNew" onclick="location.href='{{user.editPath}}/{{type}}'">Add New</button>
      </div>
    </div>
    <div class="col-10 text-right">
      {{#if filter.pages}}
        <div class="btn-group btn-group-sm cm-edit-list-pagination cm-toggle-visible" role="group" aria-label="...">
          {{#gt filter.page 1}} 
            <button type="button" class="btn btn-secondary cm-toggle-enabled" id="btnPrevPage" onclick="location.href='{{types}}?page={{subtract filter.page 1}}{{getParamsA filter "sort,dir,search"}}'">Prev</button>
          {{else}}
            <button type="button" class="btn btn-secondary disabled" disabled="true" id="btnPrevPage">Prev</button>
          {{/gt}}
          {{#each filter.pages}}
            <button type="button" class="btn btn-secondary cm-toggle-enabled {{#is this ../filter.page}}active{{/is}}" id="btnPage{{this}}" onclick="location.href='{{types}}?page={{this}}{{getParamsA ../filter "sort,dir,search"}}'">{{this}}</button>
          {{/each}}
          {{#lt filter.page (last filter.pages)}}
            <button type="button" class="btn btn-secondary cm-toggle-enabled" id="btnNextPage" onclick="location.href='{{types}}?page={{add filter.page 1}}{{getParamsA filter "sort,dir,search"}}'">Next</button>
          {{else}}
            <button type="button" class="btn btn-secondary disabled" disabled="true" id="btnNextPage">Next</button>
          {{/lt}}
        </div>
      {{/if}}
    </div>
  </div>
</div>


<script>

//======================================================
// Utility methods
//======================================================

//------------------------------------------------------
// Handle keydown events for Alt keys
//------------------------------------------------------
$(document).keydown(function (e) {
  if (e.altKey) {
    if (e.keyCode === 78) {    // N
      $('#btnAddNew').click()
    } else if (e.keyCode === 70) {    // F
      $('#txtSearch').focus()
    } else if (e.keyCode === 37) {    // Left 
      $('#btnPrevPage').click()
    } else if (e.keyCode === 39) {    // Right
      $('#btnNextPage').click()
    } else if (e.keyCode === 69) {    // E
      $('.btn-edit')[0].click()
    } else if (e.keyCode === 77) {    // M
      $('.btn-manifests')[0].click()
    }
    if ([37, 39, 69, 70, 77, 78].includes(e.keyCode)) {
      e.preventDefault()
      e.stopPropagation()
    }
  }
})

$.prototype.cmDisable = function () { return this.addClass('disabled').prop('disabled', true); };
$.prototype.cmEnable = function () { return this.removeClass('disabled').prop('disabled', false); };
$.prototype.cmHide = function () { return this.addClass('cm-hidden'); };
$.prototype.cmShow = function () { return this.removeClass('cm-hidden'); }

const disableButtons = function (withIds) {
  if (withIds) {
    for (let i in withIds) {
      $(withIds[i]).cmDisable();
    }
  } else {
    {{!-- $('form').find('button').cmDisable(); --}}
    $('button.cm-toggle-enabled').cmDisable();
  }
};

const enableButtons = function (withIds) {
  if (withIds) {
    for (let i in withIds) {
      $(withIds[i]).cmEnable();
    }
  } else {
    {{!-- $('form').find('button').cmEnable(); --}}
    $('button.cm-toggle-enabled').cmEnable();
   }
}


// Button control/handler routines
//======================================================

if (window.location.href.includes('search=')) { 
  $('#txtSearch').select();
} else { $('#btnAddNew').focus(); }

if (window.location.href.includes('sort=')) {
  let href = window.location.href;
  if (href.includes('sort=name')) {
    if (href.includes('dir=desc')) { $('#lnkSortNameDesc').cmHide(); }
    else { $('#lnkSortNameAsc').cmHide(); }
    $('#lnkSortNameRemove').cmShow();
  } else if (href.includes('sort=contactName')) {
    if (href.includes('dir=desc')) { $('#lnkSortContactNameDesc').cmHide(); }
    else { $('#lnkSortContactNameAsc').cmHide(); }
    $('#lnkSortContactNameRemove').cmShow();
  }
}

const selectAll = function () {
  $('.btn-select:not(.active)').toggleClass('active');
  $('#btnDeleteSelected').cmEnable();
};

const selectNone = function () {
  $('.btn-select.active').toggleClass('active');
  $('#btnDeleteSelected').cmDisable();
};

$('.btn-select').click(function (event) {
  if (!$(event.target).hasClass('active') || $('.btn-select.active').length > 1) {
     $('#btnDeleteSelected').cmEnable();
  } else {
     $('#btnDeleteSelected').cmDisable();
  }
});

const confirmDelete = function (forId) {
  if ($('#btnDel' + forId).hasClass('btn-primary')) {
    $('#spinner').cmShow();
    location.href = $('#btnDel' + forId).attr('data-cm-href');
  } else {
    disableButtons();
    enableButtons(['#btnDel' + forId, '#btnCancelDel' + forId]);
    $('#btnCancelDel' + forId).cmShow().focus();
    $('#btnDel' + forId).addClass('btn-primary').removeClass('btn-outline-secondary').html('Sure?');
  }
}

const cancelDelete = function (forId) {
  enableButtons();
  $('#btnCancelDel' + forId).cmHide();
  $('#btnDel' + forId).addClass('btn-outline-secondary').removeClass('btn-primary').html('Delete');
  selectNone();   // Disactivate the "Delete Selected" button
}

const confirmDeleteSelected = function () {
  let data = $('.btn-select.active').map(function () { return this.id; }).get();
  if (data.length) {
    if ($('#btnDeleteSelected').hasClass('cm-confirm')) {
      $('#spinner').cmShow();
      $.post('{{types}}/delete', { "data" : data })
        .done(function (res) { 
          if (res.status === 'ok') {
            window.location.href = '?message=' + encodeURIComponent(res.message);
          } else {
            window.location.href = '?error=' + encodeURIComponent(res.message);
          }
        });
    } else {
      disableButtons();
      $('#btnCancelDelSel').cmEnable().cmShow().focus();
      $('#btnDeleteSelected').cmEnable().addClass('cm-confirm').html('Sure?');
    }
  }
};

const cancelDeleteSelected = function () {
  enableButtons();
  $('#btnCancelDelSel').cmHide();
  $('#btnDeleteSelected').removeClass('cm-confirm').html("Delete Selected");
}

const showEdit = function (forId) {
  disableButtons();
  selectNone();
  $('#row' + forId + ' .cm-toggle-visible').toggleClass('cm-hidden').cmEnable();
  $('#row' + forId + ' .cm-toggle-visible:not(.cm-hidden)').toggleClass('cm-shown');
  $('#row' + forId + ' #name' + forId).focus();
};

const cancelEdit = function (forId) {
  enableButtons();
  $('#form' + forId).removeClass('was-validated');
  $('#row' + forId + ' .cm-toggle-visible:not(.cm-hidden)').toggleClass('cm-shown');
  $('#row' + forId + ' .cm-toggle-visible').toggleClass('cm-hidden');
  selectNone();
};

const cmSearch = function (event) {
  if (!event || (event.which === 13 || event.keyCode === 13)) {
    $('#spinner').cmShow();
    window.location.href = addParam(window.location.href, 'search', $('#txtSearch').val().trim());
  }
}

const addParam = function (url, key, val) {
  let urlArr = url.split('?');
  let params = urlArr[1];
  let param = val ? encodeURIComponent(key) + '=' + encodeURIComponent(val) : '';
  if (!params) return key && val ? url + '?' + param : url;
  let paramsArr = params.split('&');
  while (key && paramsArr.some(elem => elem.startsWith(key))) {
    paramsArr.splice(paramsArr.findIndex(elem => elem.startsWith(key)), 1);
  }
  return paramsArr.length 
    ? urlArr[0] + '?' + paramsArr.join('&') + (param ? '&' + param : '')
    : urlArr[0] + (param ? '?' + param : '');
}

</script>